{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/Header.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["appReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","Header","IncomeExpenses","amounts","income","expenses","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e920aae1.chunk.js","sourcesContent":["export default function appReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// initial state\r\nconst initialState = {\r\n  transactions: [\r\n    { id: 1, text: 'Flower', amount: -20 },\r\n    { id: 2, text: 'Salary', amount: 3000 },\r\n    { id: 3, text: 'Book', amount: -10 },\r\n    { id: 4, text: 'Camera', amount: 150 },\r\n  ],\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n           <h4>Your Balance</h4>\r\n           <h1>{total}</h1> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expenses = amounts\r\n    .filter((item) => item < 0)\r\n    .reduce((acc, item) => (acc += item), 0) * -1\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">${income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">${expenses}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n      {transaction.text}{' '}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit} id=\"form\">\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import './App.css';\r\nimport { Balance } from './components/Balance';\r\nimport { Header } from './components/Header';\r\nimport { IncomeExpenses } from './components/IncomeExpenses';\r\nimport { TransactionList } from './components/TransactionList';\r\nimport { AddTransaction } from './components/AddTransaction';\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <GlobalProvider>\r\n        <Header />\r\n        <div className=\"container\">\r\n          <Balance />\r\n          <IncomeExpenses />\r\n          <TransactionList />\r\n          <AddTransaction />\r\n        </div>\r\n      </GlobalProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}